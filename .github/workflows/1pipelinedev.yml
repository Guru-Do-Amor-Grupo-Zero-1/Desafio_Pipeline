name: Deploy Infra e Aplicação no GKE

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  deploy:
    name: 'Provisionar GKE + Deploy Aplicação'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Setup gcloud com kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'kubectl'
          export_default_credentials: true

      - name: Terraform Init
        run: terraform init
        working-directory: ./AtividadeSemanalTerraform

      - name: Deletar cluster
        run: |
          gcloud container clusters delete cluster-entrega \
            --region us-central1 \
            --quiet || echo "Cluster já estava deletado ou não existe"

      - name: Terraform Apply
        run: >
          terraform apply -auto-approve
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
        working-directory: ./AtividadeSemanalTerraform

      - name: Build da imagem Docker do backend
        run: |
          docker build -t regiinaldo/back-gurudoamor:dev-${{ github.sha }} ./back
          docker build -t regiinaldo/front-gurudoamor:dev-${{ github.sha }} ./front-agora

      - name: Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push da imagem para o Docker Hub
        run: |
          docker push regiinaldo/back-gurudoamor:dev-${{ github.sha }}
          docker push regiinaldo/front-gurudoamor:dev-${{ github.sha }}

      - name: Acessar cluster GKE
        run: |
          gcloud container clusters get-credentials cluster-entrega \
            --region us-central1 \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Criar namespace stage
        run: kubectl create namespace stage || echo "Namespace já existe"

      - name: Aplicar manifests
        run: |
          kubectl apply -f k8s/base/ --namespace=stage
          kubectl set image deployment/backend backend=regiinaldo/back-gurudoamor:dev-${{ github.sha }} -n stage
          kubectl set image deployment/frontend frontend=regiinaldo/front-gurudoamor:dev-${{ github.sha }} -n stage

               - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Adicionar repositório Prometheus Community
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Instalar Prometheus + Grafana via Helm
        run: |
          if ! helm status kube-prometheus-stack -n monitoring > /dev/null 2>&1; then
            helm install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
              -n monitoring --create-namespace \
              -f k8s/monitoring/monitoring-values.yaml
          else
            echo "Monitoring stack já instalado. Pulando."
          fi
