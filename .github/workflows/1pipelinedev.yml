jobs:
  terraform:
    name: 'Provisionar Infraestrutura com Terraform'
    runs-on: ubuntu-latest
    outputs:
      vm_ip: ${{ steps.get_ip.outputs.ip_address }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar na Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        id: init
        run: terraform init # REMOVIDA a linha 'working-directory'

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color # REMOVIDA a linha 'working-directory'

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" # REMOVIDA a linha 'working-directory'

      - name: Obter IP da VM (Output)
        id: get_ip
        run: |
          IP_ADDRESS=$(terraform output -raw vm_instance_ip)
          echo "IP da VM é: $IP_ADDRESS"
          echo "ip_address=$IP_ADDRESS" >> $GITHUB_OUTPUT
          # REMOVIDA a linha 'working-directory'

  ansible:
    name: 'Configurar VM e Deploy com Ansible'
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Aguardar porta SSH ficar disponível
        run: |
          echo "Aguardando 30 segundos pela inicialização da VM e do SSH..."
          sleep 30
          # Adicionado um tempo de espera para a VM inicializar completamente.

      - name: Criar arquivo de inventário do Ansible
        run: |
          echo "[vm]" > inventory.ini
          echo "${{ needs.terraform.outputs.vm_ip }} ansible_user=root" >> inventory.ini # Verifique se 'root' é o usuário correto
        working-directory: ./ansible # MANTIDO, pois a pasta 'ansible' existe

      - name: Executar o Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbook.yml
          directory: ./ansible # MANTIDO, pois a pasta 'ansible' existe
          inventory: inventory.ini
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          options: |
            --user root
            --extra-vars "ansible_user=root"